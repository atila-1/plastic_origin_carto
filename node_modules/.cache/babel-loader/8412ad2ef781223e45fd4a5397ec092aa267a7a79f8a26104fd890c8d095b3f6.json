{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport mapboxgl from 'mapbox-gl';\nconst TrashLayer = props => {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const baseURL = 'https://api-dev-plastico.westeurope.cloudapp.azure.com/v1/geojson/-1.05/43.47/-1.0/43.75?entity_type=trash';\n  const [zoom, setZoom] = useState(5);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(baseURL);\n        setData(response.data);\n        setLoading(false);\n      } catch (error) {\n        console.error(error);\n        setLoading(true);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    console.log(\"Loading\");\n    if (loading || !data || !props.map) {\n      console.log(\"Nothing as:\");\n      console.log(\"loading = \" + loading);\n      console.log(\"data = \" + data);\n      console.log(\"map = \" + props.map);\n      return;\n    }\n    ;\n    setZoom(map.current.getZoom().toFixed(2));\n    props.map.addSource(\"data\", {\n      \"type\": \"geojson\",\n      \"data\": data\n    });\n    if (props.map.getZoom() > 10) {\n      props.map.addLayer({\n        \"id\": \"data\",\n        \"type\": \"heatmap\",\n        \"source\": \"data\",\n        \"layout\": {}\n      });\n    }\n  }, [data, props.map, zoom]);\n  return null;\n};\n_s(TrashLayer, \"9kii3k5cCIFd+dLLTNPOQxlcmxI=\");\n_c = TrashLayer;\nexport default TrashLayer;\nvar _c;\n$RefreshReg$(_c, \"TrashLayer\");","map":{"version":3,"names":["useState","useEffect","axios","mapboxgl","TrashLayer","props","data","setData","loading","setLoading","baseURL","zoom","setZoom","fetchData","response","get","error","console","log","map","current","getZoom","toFixed","addSource","addLayer"],"sources":["C:/Users/quent/Documents/Surfrider/new_map_from_scratch/src/components/TrashLayer.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport mapboxgl from 'mapbox-gl';\r\n\r\nconst TrashLayer = props => {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const baseURL = 'https://api-dev-plastico.westeurope.cloudapp.azure.com/v1/geojson/-1.05/43.47/-1.0/43.75?entity_type=trash';\r\n  const [zoom, setZoom] = useState(5);\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(baseURL);\r\n        setData(response.data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setLoading(true);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(\"Loading\")\r\n    if (loading || !data || !props.map) {\r\n      console.log(\"Nothing as:\") \r\n      console.log(\"loading = \" + loading)\r\n      console.log(\"data = \" + data)\r\n      console.log(\"map = \" + props.map)\r\n      return\r\n    };\r\n\r\n    setZoom(map.current.getZoom().toFixed(2));\r\n\r\n\r\n    props.map.addSource(\"data\", {\r\n      \"type\": \"geojson\",\r\n      \"data\": data\r\n    });\r\n\r\n    if (props.map.getZoom() > 10){\r\n      props.map.addLayer({\r\n        \"id\": \"data\",\r\n        \"type\": \"heatmap\",\r\n        \"source\": \"data\",\r\n        \"layout\": {\r\n        }\r\n      });\r\n    }\r\n\r\n    }\r\n    , [data, props.map, zoom]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default TrashLayer;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAEhC,MAAMC,UAAU,GAAGC,KAAK,IAAI;EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMU,OAAO,GAAG,4GAA4G;EAC5H,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAGnCC,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,YAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAACL,OAAO,CAAC;QACzCH,OAAO,CAACO,QAAQ,CAACR,IAAI,CAAC;QACtBG,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpBP,UAAU,CAAC,IAAI,CAAC;MAClB;IACF,CAAC;IACDI,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAGNZ,SAAS,CAAC,MAAM;IACdgB,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtB,IAAIV,OAAO,IAAI,CAACF,IAAI,IAAI,CAACD,KAAK,CAACc,GAAG,EAAE;MAClCF,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAC1BD,OAAO,CAACC,GAAG,CAAC,YAAY,GAAGV,OAAO,CAAC;MACnCS,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGZ,IAAI,CAAC;MAC7BW,OAAO,CAACC,GAAG,CAAC,QAAQ,GAAGb,KAAK,CAACc,GAAG,CAAC;MACjC;IACF;IAAC;IAEDP,OAAO,CAACO,GAAG,CAACC,OAAO,CAACC,OAAO,EAAE,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;IAGzCjB,KAAK,CAACc,GAAG,CAACI,SAAS,CAAC,MAAM,EAAE;MAC1B,MAAM,EAAE,SAAS;MACjB,MAAM,EAAEjB;IACV,CAAC,CAAC;IAEF,IAAID,KAAK,CAACc,GAAG,CAACE,OAAO,EAAE,GAAG,EAAE,EAAC;MAC3BhB,KAAK,CAACc,GAAG,CAACK,QAAQ,CAAC;QACjB,IAAI,EAAE,MAAM;QACZ,MAAM,EAAE,SAAS;QACjB,QAAQ,EAAE,MAAM;QAChB,QAAQ,EAAE,CACV;MACF,CAAC,CAAC;IACJ;EAEA,CAAC,EACC,CAAClB,IAAI,EAAED,KAAK,CAACc,GAAG,EAAER,IAAI,CAAC,CAAC;EAE5B,OAAO,IAAI;AACb,CAAC;AAAC,GAtDIP,UAAU;AAAA,KAAVA,UAAU;AAwDhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}