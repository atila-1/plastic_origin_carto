{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport mapboxgl from 'mapbox-gl';\nconst Trash = props => {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const baseURL = 'https://api-dev-plastico.westeurope.cloudapp.azure.com/v1/geojson/-1.001/43.47/-1.0/43.701?entity_type=trash';\n  console.log(\"Map = \");\n  //console.log(props.map.current)\n\n  /*   useEffect(() => {\r\n      const fetchData = async () => {\r\n        try {\r\n          const response = await axios.get(baseURL);\r\n          setData(response.data);\r\n          setLoading(false);\r\n        } catch (error) {\r\n          console.error(error);\r\n          setLoading(true);\r\n        }\r\n      }\r\n      fetchData();\r\n    }, []); */\n\n  useEffect(() => {\n    if (props.map) {\n      console.log(\"marker?\");\n      console.log(props.map);\n      const marker = new mapboxgl.Marker().setLngLat([2.1, 46.1]).addTo(props.map).setPopup(new mapboxgl.Popup({\n        offset: 25\n      }).setHTML(`<h3>${\"test\"}</h3><p>${\"testest\"}</p>`));\n    }\n  });\n\n  //UNCOMMENT AFTER MARKERS ARE UNDERSTOOD\n  /*   useEffect(() => {\r\n      if (loading || !data) return;\r\n      const markers = data.features.map((feature) => {\r\n        const key = feature.properties.id;\r\n        const title = feature.properties.id;\r\n        const description = feature.properties.type_name;\r\n        const lng = feature.geometry.coordinates[0];\r\n        const lat = feature.geometry.coordinates[1];\r\n        console.log(\"Marker for \" + key)\r\n        const marker = new mapboxgl.Marker()\r\n          .setLngLat([lng, lat])\r\n          .addTo(map.current)\r\n          .setPopup(\r\n            new mapboxgl.Popup({ offset: 25 })\r\n              .setHTML(\r\n                `<h3>${title}</h3><p>${description}</p>`\r\n              )\r\n          );\r\n    \r\n        return () => marker.remove();\r\n      });\r\n    \r\n      //return () => markers.forEach(cleanupFn => cleanupFn());\r\n    });   */\n\n  return null;\n};\n_s(Trash, \"Zn4cs3026OJRBhxLd0Oqj+bUOXY=\");\n_c = Trash;\nexport default Trash;\nvar _c;\n$RefreshReg$(_c, \"Trash\");","map":{"version":3,"names":["useState","useEffect","axios","mapboxgl","Trash","props","data","setData","loading","setLoading","baseURL","console","log","map","marker","Marker","setLngLat","addTo","setPopup","Popup","offset","setHTML"],"sources":["C:/Users/quent/Documents/Surfrider/new_map_from_scratch/src/components/Trash.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport mapboxgl from 'mapbox-gl';\r\n\r\nconst Trash = props => {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const baseURL = 'https://api-dev-plastico.westeurope.cloudapp.azure.com/v1/geojson/-1.001/43.47/-1.0/43.701?entity_type=trash';\r\n  console.log(\"Map = \")\r\n  //console.log(props.map.current)\r\n\r\n/*   useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(baseURL);\r\n        setData(response.data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setLoading(true);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []); */\r\n\r\n  useEffect(() => {\r\n    if (props.map){\r\n        console.log(\"marker?\")\r\n        console.log(props.map)\r\n        const marker = new mapboxgl.Marker()\r\n        .setLngLat([2.1, 46.1])\r\n        .addTo(props.map)\r\n        .setPopup(\r\n          new mapboxgl.Popup({ offset: 25 })\r\n            .setHTML(\r\n              `<h3>${\"test\"}</h3><p>${\"testest\"}</p>`\r\n            )\r\n        );\r\n    }\r\n  });\r\n\r\n  //UNCOMMENT AFTER MARKERS ARE UNDERSTOOD\r\n/*   useEffect(() => {\r\n    if (loading || !data) return;\r\n    const markers = data.features.map((feature) => {\r\n      const key = feature.properties.id;\r\n      const title = feature.properties.id;\r\n      const description = feature.properties.type_name;\r\n      const lng = feature.geometry.coordinates[0];\r\n      const lat = feature.geometry.coordinates[1];\r\n      console.log(\"Marker for \" + key)\r\n      const marker = new mapboxgl.Marker()\r\n        .setLngLat([lng, lat])\r\n        .addTo(map.current)\r\n        .setPopup(\r\n          new mapboxgl.Popup({ offset: 25 })\r\n            .setHTML(\r\n              `<h3>${title}</h3><p>${description}</p>`\r\n            )\r\n        );\r\n  \r\n      return () => marker.remove();\r\n    });\r\n  \r\n    //return () => markers.forEach(cleanupFn => cleanupFn());\r\n  });   */\r\n\r\n  return null;\r\n};\r\n\r\nexport default Trash;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAEhC,MAAMC,KAAK,GAAGC,KAAK,IAAI;EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMU,OAAO,GAAG,8GAA8G;EAC9HC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EACrB;;EAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEEX,SAAS,CAAC,MAAM;IACd,IAAII,KAAK,CAACQ,GAAG,EAAC;MACVF,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;MACtBD,OAAO,CAACC,GAAG,CAACP,KAAK,CAACQ,GAAG,CAAC;MACtB,MAAMC,MAAM,GAAG,IAAIX,QAAQ,CAACY,MAAM,EAAE,CACnCC,SAAS,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CACtBC,KAAK,CAACZ,KAAK,CAACQ,GAAG,CAAC,CAChBK,QAAQ,CACP,IAAIf,QAAQ,CAACgB,KAAK,CAAC;QAAEC,MAAM,EAAE;MAAG,CAAC,CAAC,CAC/BC,OAAO,CACL,OAAM,MAAO,WAAU,SAAU,MAAK,CACxC,CACJ;IACL;EACF,CAAC,CAAC;;EAEF;EACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE,OAAO,IAAI;AACb,CAAC;AAAC,GAhEIjB,KAAK;AAAA,KAALA,KAAK;AAkEX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}