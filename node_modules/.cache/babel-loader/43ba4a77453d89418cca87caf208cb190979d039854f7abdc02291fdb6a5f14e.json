{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport mapboxgl from 'mapbox-gl';\nconst Trash = map => {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const baseURL = 'https://api-dev-plastico.westeurope.cloudapp.azure.com/v1/geojson/-1.001/43.47/-1.0/43.701?entity_type=trash';\n  console.log(\"Map = \");\n  console.log(map);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(baseURL);\n        setData(response.data);\n        setLoading(false);\n      } catch (error) {\n        console.error(error);\n        setLoading(true);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const marker = new mapboxgl.Marker().setLngLat([1.1, 45.1]).addTo(map.current).setPopup(new mapboxgl.Popup({\n      offset: 25\n    }).setHTML(`<h3>${\"test\"}</h3><p>${\"testest\"}</p>`));\n  });\n\n  //UNCOMMENT AFTER MARKERS ARE UNDERSTOOD\n  /*   useEffect(() => {\r\n      if (loading || !data) return;\r\n      const markers = data.features.map((feature) => {\r\n        const key = feature.properties.id;\r\n        const title = feature.properties.id;\r\n        const description = feature.properties.type_name;\r\n        const lng = feature.geometry.coordinates[0];\r\n        const lat = feature.geometry.coordinates[1];\r\n        console.log(\"Marker for \" + key)\r\n        const marker = new mapboxgl.Marker()\r\n          .setLngLat([lng, lat])\r\n          .addTo(map.current)\r\n          .setPopup(\r\n            new mapboxgl.Popup({ offset: 25 })\r\n              .setHTML(\r\n                `<h3>${title}</h3><p>${description}</p>`\r\n              )\r\n          );\r\n    \r\n        return () => marker.remove();\r\n      });\r\n    \r\n      //return () => markers.forEach(cleanupFn => cleanupFn());\r\n    });   */\n\n  return null;\n};\n_s(Trash, \"wxMq4CdaIcK+6sAwlUDld3ZazUs=\");\n_c = Trash;\nexport default Trash;\nvar _c;\n$RefreshReg$(_c, \"Trash\");","map":{"version":3,"names":["useState","useEffect","axios","mapboxgl","Trash","map","data","setData","loading","setLoading","baseURL","console","log","fetchData","response","get","error","marker","Marker","setLngLat","addTo","current","setPopup","Popup","offset","setHTML"],"sources":["C:/Users/quent/Documents/Surfrider/new_map_from_scratch/src/components/Trash.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport mapboxgl from 'mapbox-gl';\r\n\r\nconst Trash = map => {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const baseURL = 'https://api-dev-plastico.westeurope.cloudapp.azure.com/v1/geojson/-1.001/43.47/-1.0/43.701?entity_type=trash';\r\n\r\n  console.log(\"Map = \")\r\n  console.log(map)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(baseURL);\r\n        setData(response.data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setLoading(true);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const marker = new mapboxgl.Marker()\r\n    .setLngLat([1.1, 45.1])\r\n    .addTo(map.current)\r\n    .setPopup(\r\n      new mapboxgl.Popup({ offset: 25 })\r\n        .setHTML(\r\n          `<h3>${\"test\"}</h3><p>${\"testest\"}</p>`\r\n        )\r\n    );\r\n  });\r\n\r\n  //UNCOMMENT AFTER MARKERS ARE UNDERSTOOD\r\n/*   useEffect(() => {\r\n    if (loading || !data) return;\r\n    const markers = data.features.map((feature) => {\r\n      const key = feature.properties.id;\r\n      const title = feature.properties.id;\r\n      const description = feature.properties.type_name;\r\n      const lng = feature.geometry.coordinates[0];\r\n      const lat = feature.geometry.coordinates[1];\r\n      console.log(\"Marker for \" + key)\r\n      const marker = new mapboxgl.Marker()\r\n        .setLngLat([lng, lat])\r\n        .addTo(map.current)\r\n        .setPopup(\r\n          new mapboxgl.Popup({ offset: 25 })\r\n            .setHTML(\r\n              `<h3>${title}</h3><p>${description}</p>`\r\n            )\r\n        );\r\n  \r\n      return () => marker.remove();\r\n    });\r\n  \r\n    //return () => markers.forEach(cleanupFn => cleanupFn());\r\n  });   */\r\n\r\n  return null;\r\n};\r\n\r\nexport default Trash;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAEhC,MAAMC,KAAK,GAAGC,GAAG,IAAI;EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMU,OAAO,GAAG,8GAA8G;EAE9HC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EACrBD,OAAO,CAACC,GAAG,CAACP,GAAG,CAAC;EAEhBJ,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,YAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAACL,OAAO,CAAC;QACzCH,OAAO,CAACO,QAAQ,CAACR,IAAI,CAAC;QACtBG,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdL,OAAO,CAACK,KAAK,CAACA,KAAK,CAAC;QACpBP,UAAU,CAAC,IAAI,CAAC;MAClB;IACF,CAAC;IACDI,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAENZ,SAAS,CAAC,MAAM;IACd,MAAMgB,MAAM,GAAG,IAAId,QAAQ,CAACe,MAAM,EAAE,CACnCC,SAAS,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CACtBC,KAAK,CAACf,GAAG,CAACgB,OAAO,CAAC,CAClBC,QAAQ,CACP,IAAInB,QAAQ,CAACoB,KAAK,CAAC;MAAEC,MAAM,EAAE;IAAG,CAAC,CAAC,CAC/BC,OAAO,CACL,OAAM,MAAO,WAAU,SAAU,MAAK,CACxC,CACJ;EACH,CAAC,CAAC;;EAEF;EACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE,OAAO,IAAI;AACb,CAAC;AAAC,GA7DIrB,KAAK;AAAA,KAALA,KAAK;AA+DX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}